@page "/work-history/{WorkItemId:int}"
@inject IWorkItemEndpoint _workItemData

<div class="row">
    <div class="col">
        <ErrorMessage Error="@_errorMessage" />

        @if (_history is null)
        {
            <Loading />
        }
        else
        {
            <div class="mb-2">
                <button class="btn btn-warning" onclick="history.back()">
                    Back
                </button>
            </div>
            <table class="table table-sm table-striped table-bordered">
                <thead>
                    <tr>
                        <th>
                            Date Worked
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var date in _history)
                    {
                        <tr>
                            <td>
                                @date.DateWorkedOn
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>


@code {
    [Parameter]
    public int WorkItemId { get; set; }

    private IEnumerable<WorkItemHistory>? _history = null;
    private string? _errorMessage = null;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            _history = await _workItemData.GetHistory(WorkItemId);
            _errorMessage = null;
        }
        catch (Exception ex)
        {
            _errorMessage = $"API Error: {ex.Message}";
        }
    }
}
