@page "/view-work-item/{WorkItemId:int}"
@inject IWorkItemEndpoint _workItemData
@inject NavigationManager _nav

<div class="row">
    <div class="col">
        <ErrorMessage Error=@_errorMessage />

        @if (_workItem is null)
        {
            <Loading />
        }
        else if(!_editing)
        {
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@_workItem.Name</h5>
                    <p class="card-text">
                        @_workItem.Description
                        @if (_workItem.DateCompleted.HasValue)
                        {
                            <br />
                            <span>Completed: @_workItem.DateCompleted.Value.ToShortDateString()</span>
                        }
                    </p>

                    @if (_workItem.Url is not null)
                    {
                        <a href="@_workItem.Url" class="btn btn-sm btn-primary" target="_blank">
                            Work Item Link
                        </a>
                    }
                    <div class="mt-2">
                        <button type="button" class="btn btn-sm btn-primary" @onclick="MarkWorked">Mark Worked</button>
                        <button type="button" class="btn btn-sm btn-success" @onclick="Complete">Complete</button>
                        <button type="button" class="btn btn-sm btn-warning" @onclick="() => {_editing = true;}">Edit</button>
                        <button type="button" class="btn btn-sm btn-danger" @onclick="Delete">Delete</button>
                    </div>
                </div>
                <div class="card-footer text-muted">
                    <strong>Created:</strong> @_workItem.DateCreated.ToShortDateString()
                    <strong>Last Worked: </strong>
                    @if (_workItem.DateWorkedOn.HasValue)
                    {
                        <span>@_workItem.DateWorkedOn?.ToShortDateString()</span>
                    }
                    else
                    {
                        <span>Never</span>
                    }
                </div>
            </div>
        }
        else
        {
            <h1>Edit Work Item</h1>
            <WorkItemForm WorkItemId="_workItem.WorkItemId" ShowCancel=true 
            OnCancelClicked="() => {_editing = false;}" OnError="(e) => { _errorMessage = e;}" 
            OnSuccess="ItemEdited"/>
        }
    </div>
</div>

@code {
    [Parameter]
    public int WorkItemId { get; set; }

    public WorkItem? _workItem { get; set; }

    private string? _errorMessage;
    private bool _editing;

    protected override async Task OnParametersSetAsync()
    {
        await UpdateData();
    }

    private async Task UpdateData()
    {
        try
        {
            _workItem = await _workItemData.GetAsync(WorkItemId);
        }
        catch (Exception)
        {
            _errorMessage = "An Error occured while attempting to contact the API";
        }

        StateHasChanged();
    }

    private async Task MarkWorked()
    {
        try 
        {
            _workItem = await _workItemData.UpdateWorkedOn(WorkItemId);
        }
        catch
        {
            _errorMessage = "An Error occured while attempting to contact the API";
        }
    }

    public void ItemEdited(WorkItem item)
    {
        _workItem = item;
        _editing = false ;
    }

    private async Task Delete()
    {
        //TODO: Confirm Delete
        try
        {
            await _workItemData.DeleteAsync(WorkItemId);
            _errorMessage = null;
        }
        catch (Exception)
        {
            _errorMessage = "An Error occured while attempting to contact the API";
        }

        _nav.NavigateTo("work-items", false, true);
    }

    private async Task Complete()
    {
        //TODO: Confirm Complete

        _workItem!.DateCompleted = DateTime.UtcNow;
        try
        {
            await _workItemData.PutAsync(_workItem);
            _errorMessage = null;
        }
        catch (Exception)
        {
            _errorMessage = "An Error occured while attempting to contact the API";
        }
    }
}
